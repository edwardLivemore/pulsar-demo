#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

version: '3.4'

networks:
  pulsar:
    driver: bridge


#volumes:
#  zk1-data:
#  zk2-data:
#  zk3-data:
#  bk1-data:
#  bk2-data:
#  bk3-data:
#  manager-data:

services:

  zk1:
    container_name: zk1
    hostname: zk1
    image: apachepulsar/pulsar-all:latest
    command: >
      bash -c "python3 bin/apply-config-from-env.py conf/zookeeper.conf && \
               python3 bin/apply-config-from-env.py conf/pulsar_env.sh && \
               bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
               exec bin/pulsar zookeeper"
    environment:
#      ZOOKEEPER_SERVERS: zk1,zk2,zk3
      ZOOKEEPER_SERVERS: zk1
    volumes:
      - ./conf/scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py
#      - ./conf/zookeeper1.conf:/pulsar/conf/zookeeper1.conf
#      - zk1-data:/pulsar/data/zookeeper
    networks:
      pulsar:

  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar-all:latest
    command: ./bin/init-cluster.sh
    environment:
      clusterName: cluster-a
      zkServers: zk1:2181
      configurationStore: zk1:2181
      pulsarNode: proxy1
    volumes:
      - ./conf/scripts/init-cluster.sh/:/pulsar/bin/init-cluster.sh
    depends_on:
      - zk1
    networks:
      pulsar:

  bk1:
    hostname: bk1
    container_name: bk1
    image: apachepulsar/pulsar-all:latest
    command: >
      bash -c "export dbStorage_writeCacheMaxSizeMb="$${dbStorage_writeCacheMaxSizeMb:-16}" && \
               export dbStorage_readAheadCacheMaxSizeMb="$${dbStorage_readAheadCacheMaxSizeMb:-16}" && \
               python3 bin/apply-config-from-env.py conf/bookkeeper.conf && \
               python3 bin/apply-config-from-env.py conf/pulsar_env.sh && \
               python3 bin/watch-znode.py -z $$zkServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar bookie"
    environment:
      clusterName: cluster-a
#      zkServers: zk1:2181,zk2:2181,zk3:2181
      zkServers: zk1:2181
      numAddWorkerThreads: 8
      useHostNameAsBookieID: "true"
    volumes:
      - ./conf/scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py
      - ./conf/bookkeeper.conf:/pulsar/conf/bookkeeper.conf
      - ./conf/broker.conf:/pulsar/conf/broker.conf
#      - bk1-data:/pulsar/data/bookkeeper
    depends_on:
      - zk1
      - pulsar-init
    networks:
      pulsar:

  broker1:
    hostname: broker1
    container_name: broker1
    image: apachepulsar/pulsar-all:latest
    restart: on-failure
    command: >
      bash -c "python3 bin/apply-config-from-env.py conf/broker.conf && \
               python3 bin/apply-config-from-env.py conf/pulsar_env.sh && \
               python3 bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar broker"
    environment:
      clusterName: cluster-a
      #      zookeeperServers: zk1:2181,zk2:2181,zk3:2181
      zookeeperServers: zk1:2181
      #      configurationStore: zk1:2181,zk2:2181,zk3:2181
      configurationStore: zk1:2181
      webSocketServiceEnabled: "false"
      functionsWorkerEnabled: "false"
    volumes:
      - ./conf/scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py
      - ./conf/bookkeeper.conf:/pulsar/conf/bookkeeper.conf
      - ./conf/broker.conf:/pulsar/conf/broker.conf
    depends_on:
      - zk1
      - pulsar-init
      - bk1
    networks:
      pulsar:

  proxy1:
    hostname: proxy1
    container_name: proxy1
    restart: on-failure
    image: apachepulsar/pulsar-all:latest
    command: >
      bash -c "python3 bin/apply-config-from-env.py conf/proxy.conf && \
               python3 bin/apply-config-from-env.py conf/pulsar_env.sh && \
               python3 bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
               exec bin/pulsar proxy"
    environment:
      clusterName: cluster-a
#      zookeeperServers: zk1:2181,zk2:2181,zk3:2181
      zookeeperServers: zk1:2181
#      configurationStoreServers: zk1:2181,zk2:2181,zk3:2181
      configurationStoreServers: zk1:2181
      webSocketServiceEnabled: "true"
      functionWorkerWebServiceURL: http://fnc1:6750
    volumes:
      - ./conf/scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py
    ports:
      - "6650:6650"
      - "8080:8080"
    depends_on:
      - zk1
      - pulsar-init
      - bk1
      - broker1
    networks:
      pulsar:

#  websocket1:
#    hostname: websocket1
#    container_name: websocket1
#    restart: on-failure
#    image: apachepulsar/pulsar-all:latest
#    command: >
#      bash -c "python3 bin/apply-config-from-env.py conf/websocket.conf && \
#               python3 bin/apply-config-from-env.py conf/pulsar_env.sh && \
#               python3 bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
#               exec bin/pulsar websocket"
#    environment:
#      clusterName: cluster-a
##      zookeeperServers: zk1:2181,zk2:2181,zk3:2181
#      zookeeperServers: zk1:2181
##      configurationStoreServers: zk1:2181,zk2:2181,zk3:2181
#      configurationStoreServers: zk1:2181
#    volumes:
#      - ./conf/scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py
#    depends_on:
#      - zk1
#      - pulsar-init
#      - bk1
#      - broker1
#      - proxy1
#    networks:
#      pulsar:

#  fnc1:
#    hostname: fnc1
#    container_name: fnc1
#    image: apachepulsar/pulsar-all:latest
#    restart: on-failure
#    command: >
#      bash -c "python3 bin/apply-config-from-env.py conf/client.conf && \
#               python3 bin/gen-yml-from-env.py conf/functions_worker.yml && \
#               python3 bin/apply-config-from-env.py conf/pulsar_env.sh && \
#               python3 bin/watch-znode.py -z $$zookeeperServers -p /initialized-$$clusterName -w && \
#               exec bin/pulsar functions-worker"
#    environment:
#      clusterName: cluster-a
##      zookeeperServers: zk1:2181,zk2:2181,zk3:2181
#      zookeeperServers: zk1:2181
#      PF_pulsarFunctionsCluster: test
#      PF_workerId: fnc1
#      PF_configurationStoreServers: zk1:2181
#      PF_pulsarServiceUrl: pulsar://proxy1:6650
#      PF_pulsarWebServiceUrl: http://proxy1:8080
#    volumes:
#      - ./conf/scripts/apply-config-from-env.py:/pulsar/bin/apply-config-from-env.py
#    depends_on:
#      - zk1
#      - pulsar-init
#      - bk1
#      - broker1
#      - proxy1
#    networks:
#      pulsar:

#  manager:
#    hostname: manager
#    container_name: manager
#    image: apachepulsar/pulsar-manager:v0.3.0
#    ports:
#      - "9527:9527"
#      - "7750:7750"
#    depends_on:
#      - broker1
#    volumes:
#      - "data:/data"
#    environment:
#      REDIRECT_HOST: "http://127.0.0.1"
#      REDIRECT_PORT: "9527"
#      DRIVER_CLASS_NAME: "org.postgresql.Driver"
#      URL: "jdbc:postgresql://127.0.0.1:5432/pulsar_manager"
#      USERNAME: "pulsar"
#      PASSWORD: "pulsar"
#      LOG_LEVEL: "DEBUG"
#    networks:
#      pulsar:
